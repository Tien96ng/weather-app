[{"/Users/tiennguyen/Documents/Odin-Project/JavaScript/ES6/weather-app/src/App.js":"1","/Users/tiennguyen/Documents/Odin-Project/JavaScript/ES6/weather-app/src/index.js":"2","/Users/tiennguyen/Documents/Odin-Project/JavaScript/ES6/weather-app/src/reportWebVitals.js":"3"},{"size":2464,"mtime":1609033656347,"results":"4","hashOfConfig":"5"},{"size":478,"mtime":1608770212156,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1608769961483,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"17zpkxg",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tiennguyen/Documents/Odin-Project/JavaScript/ES6/weather-app/src/App.js",["15","16","17"],"import './App.css';\nimport React, { useState, useContext, useEffect, useRef } from 'react'\n\n\nfunction App() {\n  const [weather, setWeather] = useState(null);\n  const [location, setLocation] = useState(\"\")\n  const [error, setError] = useState(false)\n  const [errorMsg, setErrorMsg] = useState(\"\")\n\n\n  async function getWeatherAPI(value) {\n    try {\n      const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${value}&appid=fa717a930bec03ce7d0d693a9cd2c54b`, {\n        mode: 'cors',\n      })\n      const weatherData = await response.json()\n      setError(false)\n      setWeather(weatherData)\n      \n    } catch (error) {\n      let err = await (error)\n      alert(error)\n\n      setError(true)\n      setErrorMsg(error.toString())\n\n  }\n}\n\n// useEffect for the initial fetch a default weather when browser is first launched.\nuseEffect(() => {\n  getWeatherAPI(\"Seattle\")\n}, [])\n\n  const input = async(e) => {\n    if(e.key === \"Enter\") {\n      setLocation(e.target.value)\n      await getWeatherAPI(location)\n      await setLocation(\"\")\n    } else {\n      console.log(e.target.value)\n    }\n  }\n\n\n  // To do: add C to F toggler\n  // C: &#8451;\n  // F: &#8457;\n  const renderWeather = () => {\n    const tempFahConversion = (temp) => {\n      return Math.floor((parseInt(temp) - 273.15) * 9/5 + 32)\n    }\n\n    if(errorMsg === \"TypeError: Cannot read property '0' of undefined\") {\n      return <h1> {errorMsg} </h1>\n    } else if(!error) {\n      return (\n        <>\n          <p> {weather.weather[0].description.slice(0, 1).toUpperCase() + weather.weather[0].description.slice(1)} </p>\n          <h1>{weather.name}, {weather.sys.country}</h1>\n          <h4> Current Temp: {tempFahConversion(weather.main.temp)} &#8457;</h4>\n          <p> \n            <span> Feels Like: {tempFahConversion(weather.main.feels_like)} &#8457;</span>\n            <span> | </span>\n            <span> Sunrise: {tempFahConversion(weather.main.temp_max)} &#8457;</span>\n            <span> | </span>\n            <span> Sunset: {tempFahConversion(weather.main.temp_max)} &#8457;</span>\n          </p>\n        </>\n      ) \n    }\n\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <h1> Hello World </h1> <br />\n      <input \n        value={location}\n        placeholder={\"Search Location\"}\n        onChange={(e) => setLocation(e.target.value)}\n        onKeyDown={input}\n      />\n\n      <br />\n\n      {weather !== null && renderWeather()}\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tiennguyen/Documents/Odin-Project/JavaScript/ES6/weather-app/src/index.js",[],"/Users/tiennguyen/Documents/Odin-Project/JavaScript/ES6/weather-app/src/reportWebVitals.js",[],{"ruleId":"18","severity":1,"message":"19","line":2,"column":27,"nodeType":"20","messageId":"21","endLine":2,"endColumn":37},{"ruleId":"18","severity":1,"message":"22","line":2,"column":50,"nodeType":"20","messageId":"21","endLine":2,"endColumn":56},{"ruleId":"18","severity":1,"message":"23","line":22,"column":11,"nodeType":"20","messageId":"21","endLine":22,"endColumn":14},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'err' is assigned a value but never used."]